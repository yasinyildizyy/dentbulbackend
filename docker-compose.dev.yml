version: "3.7"

# Standards.
# build, labels, environment, volumes, ports, others, networks, restart.

services:
    postgresql:
        build: sdocker/postgresql
        labels:
            - traefik.enable=false
        environment:
            - POSTGRES_ROOT_PASSWORD=${POSTGRES_ROOT_PASSWORD:-root}
            - POSTGRES_DATABASE=${POSTGRES_DATABASE:-app}
            - POSTGRES_USER=${POSTGRES_USER:-app}
            - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-app}
        volumes:
            - postgresql_data:/var/lib/postgresql/data
        ports:
            - target: 5432
              published: ${POSTGRES_OUT_PORT:-27432}
              protocol: tcp
        networks:
            - internal
        restart: unless-stopped

    php:
        volumes:
            - docker-sync:/srv/app

    caddy:
        build: sdocker/caddy
        labels:
            - traefik.enable=true
            - traefik.http.routers.${NAME}-caddy.rule=Host(`${HOST}`)
            - traefik.http.routers.${NAME}-caddy.tls=true
            - traefik.http.routers.${NAME}-caddy.middlewares=${NAME}-cdn
            - traefik.http.middlewares.${NAME}-cdn.redirectregex.regex=^https?://${HOST}/uploads/(.*)
            - traefik.http.middlewares.${NAME}-cdn.redirectregex.replacement=https://dentbul-dev.fra1.digitaloceanspaces.com/uploads/$${1}
            - traefik.port=80
        volumes:
            - docker-sync:/srv/app

#    rabbitmq:
#        build: sdocker/rabbitmq
#        labels:
#            - traefik.enable=true
#            - traefik.http.routers.${NAME}-rabbitmq.rule=Host(`rabbitmq-$HOST`)
#            - traefik.http.routers.${NAME}-rabbitmq.tls=true
#            - traefik.http.services.${NAME}-rabbitmq.loadbalancer.server.port=15672
#            - traefik.port=80
#        environment:
#            - RABBITMQ_ERLANG_COOKIE=${RABBITMQ_ERLANG_COOKIE:-app}
#            - RABBITMQ_DEFAULT_USER=${RABBITMQ_DEFAULT_USER:-app}
#            - RABBITMQ_DEFAULT_PASS=${RABBITMQ_DEFAULT_PASS:-app}
#        volumes:
#            - rabbitmq_data:/var/lib/rabbitmq
#        ports:
#            -   target: 5672
#                published: ${RABBITMQ_OUT_PORT}
#                protocol: tcp
#        networks:
#            - internal
#            - traefik-proxy
#        restart: unless-stopped
#
#    redis:
#        build: sdocker/redis
#        labels:
#            - traefik.enable=false
#        volumes:
#            - redis_data:/data
#        ports:
#            - target: 6379
#              published: ${REDIS_OUT_PORT}
#              protocol: tcp
#        networks:
#            - internal
#        restart: unless-stopped
#
#    elasticsearch:
#        build: sdocker/elasticsearch
#        labels:
#            - traefik.enable=true
#            - traefik.http.routers.${NAME}-elasticsearch.rule=Host(`elasticsearch-$HOST`)
#            - traefik.http.routers.${NAME}-elasticsearch.tls=true
#            - traefik.http.services.${NAME}-elasticsearch.loadbalancer.server.port=9200
#            - traefik.port=80
#        environment:
#            - cluster.name=symfony-cluster
#            - bootstrap.memory_lock=true
#            - discovery.type=single-node
#            - "ES_JAVA_OPTS=-Xms256m -Xmx256m"
#        volumes:
#            - elasticsearch_data:/usr/share/elasticsearch/data
#        ports:
#            - target: 9200
#              published: ${ELASTICSEARCH_ONE_OUT_PORT:-9200}
#              protocol: tcp
#            - target: 9300
#              published: ${ELASTICSEARCH_TWO_OUT_PORT:-9300}
#              protocol: tcp
#        ulimits:
#            memlock:
#                soft: -1
#                hard: -1
#        networks:
#            - internal
#            - traefik-proxy
#        restart: unless-stopped
#
#    kibana:
#        build: sdocker/kibana
#        labels:
#            - traefik.enable=true
#            - traefik.http.routers.${NAME}-kibana.rule=Host(`kibana-$HOST`)
#            - traefik.http.routers.${NAME}-kibana.tls=true
#            - traefik.http.services.${NAME}-kibana.loadbalancer.server.port=5601
#            - traefik.port=80
#        environment:
#            - ELASTICSEARCH_URL=http://elasticsearch:9200
#            - xpack.security.enabled=false
#        depends_on:
#            - elasticsearch
#        networks:
#            - internal
#            - traefik-proxy
#        restart: unless-stopped
#
#    mailcatcher:
#        build: sdocker/mailcatcher
#        labels:
#            - traefik.enable=true
#            - traefik.http.routers.${NAME}-mailcatcher.rule=Host(`mailcatcher-$HOST`)
#            - traefik.http.routers.${NAME}-mailcatcher.tls=true
#            - traefik.http.services.${NAME}-mailcatcher.loadbalancer.server.port=1080
#            - traefik.port=80
#        ports:
#            - target: 1025
#              published: ${MAILCATCHER_SMTP_OUT_PORT}
#              protocol: tcp
#        networks:
#            - internal
#            - traefik-proxy
#        restart: unless-stopped

volumes:
    docker-sync:
        name: "${NAME}-sync"
        external: true
    postgresql_data:
    caddy_data:
    caddy_config:
#    rabbitmq_data:
#    redis_data:
#    elasticsearch_data:
#    kibana_data:

networks:
    traefik-proxy:
        external: true
    internal:
        external: false
